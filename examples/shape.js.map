{"version":3,"file":"shape.js","sources":["../src/Color.ts","../src/Context.ts","../src/Program.ts","../src/VertexBuffer.ts","../src/IndexBuffer.ts","../src/Texture.ts","../node_modules/@shed/math/dist/index.es.js","../src/examples/Wireframe.ts","../src/examples/shape.ts"],"sourcesContent":["export class Color {\n\n    static readonly TRANSPARENT = new Color(0.0, 0.0, 0.0, 0.0);\n    static readonly WHITE = new Color(1.0, 1.0, 1.0, 1.0);\n    static readonly BLACK = new Color(0.0, 0.0, 0.0, 1.0);\n    static readonly GRAY = new Color(0.5, 0.5, 0.5, 1.0);\n    static readonly DARK_GRAY = new Color(0.3, 0.3, 0.3, 1.0); // 深灰 \n    static readonly LIGHT_GRAY = new Color(0.7, 0.7, 0.7, 1.0); // 浅灰\n    static readonly RED = new Color(1.0, 0, 0, 1.0);\n    static readonly GREEN = new Color(0, 1.0, 0, 1.0);\n    static readonly BLUE = new Color(0, 0, 1.0, 1.0);\n    static readonly YELLOW = new Color(1.0, 1.0, 0, 1.0);\n    static readonly CYAN = new Color(0, 1.0, 1.0, 1.0); // 蓝绿\n\n    /**\n     *  颜色混合\n     * @static\n     * @param {Color} c1\n     * @param {Color} c2\n     * @param {number} ratio 0~1 之间的值\n     * @returns {Color}\n     */\n    public static Mix(c1: Color, c2: Color, ratio: number): Color {\n        let oneMinusR: number = 1 - ratio;\n        return new Color(c1.r * oneMinusR + c2.r * ratio,\n            c1.g * oneMinusR + c2.g * ratio,\n            c1.b * oneMinusR + c2.b * ratio,\n            c1.a * oneMinusR + c2.a * ratio);\n    }\n\n    public static fromHex(v: number): Color {\n        let inv255: number = 1 / 255;\n        return new Color(\n            ((v & 0xff000000) >>> 24) * inv255,\n            ((v & 0x00ff0000) >>> 16) * inv255,\n            ((v & 0x0000ff00) >>> 8) * inv255,\n            ((v & 0x000000ff)) * inv255\n        );\n    }\n\n    public static random(): Color {\n        return Color.fromHex(Math.random() * 0xffffffff);\n        // return new Color(Math.random(), Math.random(), Math.random(), Math.random());\n    }\n\n    /**\n     * WebGl需要值范围在 0 ~ 1 之间\n     * \n     * @type {number}\n     */\n    public r: number;\n    public g: number;\n    public b: number;\n    public a: number;\n\n    /**\n     * Creates an instance of Color.\n     * \n     * @param {number} [r=1] 0~1 之间\n     * @param {number} [g=1] 0~1 之间\n     * @param {number} [b=1] 0~1 之间\n     * @param {number} [a=1] 0~1 之间\n     */\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    public reset(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    public reset255(r: number = 255, g: number = 255, b: number = 255, a: number = 255) {\n        this.a255 = a;\n        this.r255 = r;\n        this.g255 = g;\n        this.b255 = b;\n    }\n\n    public get r255(): number {\n        return Math.round(this.r * 255);\n    }\n\n    public set r255(v: number) {\n        if (isNaN(v))\n            return;\n\n        this.r = v / 255;\n    }\n\n    public get g255(): number {\n        return Math.round(this.g * 255);\n    }\n\n    public set g255(v: number) {\n        if (isNaN(v))\n            return;\n\n        this.g = v / 255;\n    }\n\n    public get b255(): number {\n        return Math.round(this.b * 255);\n    }\n\n    public set b255(v: number) {\n        if (isNaN(v))\n            return;\n\n        this.b = v / 255;\n    }\n\n    public get a255(): number {\n        return Math.round(this.a * 255);\n    }\n\n    public set a255(v: number) {\n        if (isNaN(v))\n            return;\n\n        this.a = v / 255;\n    }\n\n    /**\n     *  设置 0xRRGGBBAA 格式\n     */\n    public set hex(v: number) {\n        this.r255 = ((v & 0xff000000) >>> 24);\n        this.g255 = ((v & 0x00ff0000) >>> 16);\n        this.b255 = ((v & 0x0000ff00) >>> 8);\n        this.a255 = ((v & 0x000000ff));\n    }\n\n    /**\n     * 返回 16进制数字 RRGGBBAA 格式\n     * \n     * @type {number}\n     */\n    public get hex(): number {\n        return (this.r255 << 24) | (this.g255 << 16) | (this.b255 << 8) | (this.a255);\n    }\n\n    public toFloat32Array(target?: Float32Array): Float32Array {\n        if (!target) {\n            target = new Float32Array(4);\n        }\n        target[0] = this.r;\n        target[1] = this.g;\n        target[2] = this.b;\n        target[3] = this.a;\n        return target;\n    }\n\n    public equal(c: Color): boolean {\n        let e = 0.001;\n        if (Math.abs(this.r - c.r) > e\n            || Math.abs(this.g - c.g) > e\n            || Math.abs(this.b - c.b) > e\n            || Math.abs(this.a - c.a) > e) {\n            return false;\n        }\n        return true;\n    }\n\n    public clone(): Color {\n        return new Color(this.r, this.g, this.b, this.a);\n    }\n\n    public toString() {\n        return `rgba(${this.r255}, ${this.g255}, ${this.b255}, ${this.a255})`;\n    }\n\n\n}\n","import { Color } from \"./Color\";\r\nimport { VertexBuffer } from \"./VertexBuffer\";\r\n\r\nexport class Context {\r\n\r\n    protected _drawCall: number = 0;\r\n    public _gl: WebGLRenderingContext;\r\n\r\n    constructor(ctx: WebGLRenderingContext) {\r\n        this._gl = ctx;\r\n        this.clearColor = Color.GRAY;\r\n    }\r\n\r\n    get width() {\r\n        return this._gl.drawingBufferWidth;\r\n    }\r\n\r\n    get height() {\r\n        return this._gl.drawingBufferHeight;\r\n    }\r\n    // set color\r\n    set clearColor(c: Color) {\r\n        this._gl.clearColor(c.r, c.g, c.b, c.a);\r\n    }\r\n\r\n    cullBackFace() {\r\n        let gl = this._gl;\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(gl.BACK);\r\n    }\r\n\r\n    clear(color: Color | null = null): void {\r\n        if (color)\r\n            this.clearColor = color;\r\n        this._gl.clear(this._gl.COLOR_BUFFER_BIT);\r\n        this._drawCall = 0;\r\n    }\r\n\r\n    // turn off the color channel\r\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n        this._gl.colorMask(r, g, b, a);\r\n    }\r\n\r\n    flipY(boole: boolean = true) {\r\n        this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, boole ? 1 : 0);\r\n    }\r\n\r\n    draw() {\r\n        //  gl.drawArrays or gl.drawElements\r\n    }\r\n\r\n    // 没有indexbuffer时调用\r\n    // @primitiveType: gl.POINTS, gl.LINES, gl.LINE_STRIP, gl.LINE_LOOP, gl.TRIANGLES, gl.TRIANGLE_STRIP, gl. TRIANGLE_FAN.\r\n    drawArrays(primitiveType: number, offset: number, count: number) {\r\n        this._gl.drawArrays(primitiveType, offset, count)\r\n    }\r\n    drawArraysPoints(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.POINTS, offset, count);\r\n    }\r\n    drawArraysLines(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.LINES, offset, count);\r\n    }\r\n    drawArraysLineStrip(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.LINE_STRIP, offset, count);\r\n\r\n    }\r\n    drawArraysLineLoop(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.LINE_LOOP, offset, count);\r\n\r\n    }\r\n    drawArraysTriangles(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.TRIANGLES, offset, count)\r\n    }\r\n    drawArraysTriangleStrip(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, offset, count);\r\n    }\r\n    drawArraysTriangleFan(offset: number, count: number) {\r\n        let gl = this._gl;\r\n        gl.drawArrays(gl.TRIANGLE_FAN, offset, count);\r\n    }\r\n\r\n    drawElementsTriangle(count: number, offset: number = 0) {\r\n        let gl = this._gl;\r\n        gl.drawElements(gl.TRIANGLES, count, gl.UNSIGNED_SHORT, offset);\r\n    }\r\n\r\n    viewport(x: number, y: number, width: number, height: number) {\r\n        this._gl.viewport(x, y, width, height);\r\n    }\r\n\r\n    // 根据css大小设置 drawingbuffer大小 微信环境不支持！！！\r\n    adjustSize() {\r\n        let canvas = this._gl.canvas;\r\n        // Lookup the size the browser is displaying the canvas.\r\n        var displayWidth = canvas.clientWidth;\r\n        var displayHeight = canvas.clientHeight;\r\n\r\n        // Check if the canvas is not the same size.\r\n        if (canvas.width != displayWidth ||\r\n            canvas.height != displayHeight) {\r\n            if (__DEBUG__) {\r\n                console.log('context.adjustSize:', displayWidth, displayHeight);\r\n            }\r\n\r\n            // Make the canvas the same size\r\n            canvas.width = displayWidth;\r\n            canvas.height = displayHeight;\r\n            this._gl.viewport(0, 0, displayWidth, displayHeight);\r\n        }\r\n    }\r\n\r\n    adjustHDSize(realToCSSPixels: number = window.devicePixelRatio) {\r\n        let canvas = this._gl.canvas;\r\n\r\n        // Lookup the size the browser is displaying the canvas in CSS pixels\r\n        // and compute a size needed to make our drawingbuffer match it in\r\n        // device pixels.\r\n        var displayWidth = Math.floor(canvas.clientWidth * realToCSSPixels);\r\n        var displayHeight = Math.floor(canvas.clientHeight * realToCSSPixels);\r\n\r\n        // Check if the canvas is not the same size.\r\n        if (canvas.width !== displayWidth ||\r\n            canvas.height !== displayHeight) {\r\n\r\n            // Make the canvas the same size\r\n            canvas.width = displayWidth;\r\n            canvas.height = displayHeight;\r\n            this._gl.viewport(0, 0, displayWidth, displayHeight);\r\n        }\r\n    }\r\n\r\n    registMouseDown(fun: (x: number, y: number) => any) {\r\n        let gl = this._gl;\r\n        let canvas = gl.canvas;\r\n        canvas.onmousedown = (ev) => {\r\n            let x = ev.clientX;\r\n            let y = ev.clientY;\r\n            let rect = canvas.getBoundingClientRect();\r\n            fun(x - rect.left, y - rect.top);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Context } from \"./Context\";\r\n\r\nexport class Program {\r\n\r\n    protected static BINDING: Program | null;\r\n\r\n    protected _ctx: Context;\r\n    protected _glProgram: WebGLProgram;\r\n\r\n    protected _vsSource: string;\r\n    protected _fsSource: string;\r\n\r\n    protected _uniformLocationMap: { [name: string]: WebGLUniformLocation } = {};\r\n    protected _attributeLocationMap: { [name: string]: number } = {};\r\n\r\n    constructor(ctx: Context, vsSource: string, fsSource: string) {\r\n\r\n        this._ctx = ctx;\r\n        this._vsSource = vsSource;\r\n        this._fsSource = fsSource;\r\n        this._glProgram = this._createGLProgram(vsSource, fsSource) as WebGLProgram;\r\n\r\n        //  gets all uniforms location\r\n        let gl: WebGLRenderingContext = this._ctx._gl;\r\n        const numUniforms = gl.getProgramParameter(this._glProgram, gl.ACTIVE_UNIFORMS);\r\n\r\n        let uniformInfo: WebGLActiveInfo;\r\n        for (let i = 0; i < numUniforms; i++) {\r\n            uniformInfo = gl.getActiveUniform(this._glProgram, i) as WebGLActiveInfo;\r\n            if (!uniformInfo) {\r\n                continue;\r\n            }\r\n\r\n            var name = uniformInfo.name;\r\n            // remove the array suffix.\r\n            if (name.substr(-3) === \"[0]\") {\r\n                name = name.substr(0, name.length - 3);\r\n            }\r\n\r\n            this._uniformLocationMap[name] = gl.getUniformLocation(this._glProgram, uniformInfo.name) as WebGLUniformLocation;\r\n            // uniformInfo.type  , uniformInfo.size\r\n            if (__DEBUG__) {\r\n                console.log('###Program uniforms: ###', uniformInfo.name, this._uniformLocationMap[name]);\r\n            }\r\n        }\r\n        let numAttribs: number = gl.getProgramParameter(this._glProgram, gl.ACTIVE_ATTRIBUTES);\r\n        let attribInfo: WebGLActiveInfo | null;\r\n        for (let i = 0; i < numAttribs; i++) {\r\n            attribInfo = gl.getActiveAttrib(this._glProgram, i);\r\n            if (!attribInfo) {\r\n                continue;\r\n            }\r\n            this._attributeLocationMap[attribInfo.name] = gl.getAttribLocation(this._glProgram, attribInfo.name);\r\n            if (__DEBUG__) {\r\n                console.log('###Program attributes: ###', attribInfo.name, this._attributeLocationMap[attribInfo.name]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public getAttributeLocation(attribute: string) {\r\n        if (__DEBUG__) {\r\n            if (this._attributeLocationMap[attribute] === undefined)\r\n                console.error('getAttributeLocation error:', attribute);\r\n        }\r\n        return this._attributeLocationMap[attribute];\r\n    }\r\n\r\n    public getUniformLocation(uniform: string) {\r\n        if (__DEBUG__) {\r\n            if (this._uniformLocationMap[uniform] === undefined)\r\n                console.error('getUniformLocation error:', uniform);\r\n        }\r\n        return this._uniformLocationMap[uniform];\r\n    }\r\n\r\n    public uniformi(uniform: string, value: number) {\r\n        this.bind();\r\n        this._ctx._gl.uniform1i(this.getUniformLocation(uniform), value);\r\n    }\r\n\r\n    public uniform1f(uniform: string, value: number) {\r\n        this.bind();\r\n        this._ctx._gl.uniform1f(this.getUniformLocation(uniform), value);\r\n    }\r\n\r\n    /**\r\n     * uniform float u_kernel[9] => uniform1fv('u_kernel',[1,1,1,1,1,1,1,1,1])\r\n     * @param uniform \r\n     * @param value array\r\n     */\r\n    public uniform1fv(uniform: string, value: Float32List) {\r\n        this.bind();\r\n        this._ctx._gl.uniform1fv(this.getUniformLocation(uniform), value)\r\n    }\r\n\r\n    public uVec2(uniform: string, value: number, value2: number) {\r\n        this.bind();\r\n        this._ctx._gl.uniform2f(this.getUniformLocation(uniform), value, value2);\r\n    }\r\n\r\n    public uVec3(uniform: string, value: number, value2: number, value3: number) {\r\n        this.bind();\r\n        this._ctx._gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\r\n    }\r\n\r\n    public uVec4(uniform: string, value: number, value2: number, value3: number, value4: number) {\r\n        this.bind();\r\n        this._ctx._gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\r\n    }\r\n\r\n    public uMat2(uniform: string, array4: Float32Array) {\r\n        this.bind();\r\n        this._ctx._gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, array4);\r\n    }\r\n\r\n    /**\r\n     * upload 3x3 uniform\r\n     * uniform mat3 mvp;\r\n     * uniformMat3('mvp',new Float32Array([1,2,3,4,5,6,7,8,9]))\r\n     * @param uniform \r\n     * @param array9 \r\n     */\r\n    public uMat3(uniform: string, array9: Float32Array) {\r\n        this.bind();\r\n        this._ctx._gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, array9);\r\n    }\r\n\r\n    public uMat4(uniform: string, array16: Float32Array) {\r\n        this.bind();\r\n        this._ctx._gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, array16);\r\n    }\r\n\r\n    /**\r\n     * set texture unit n to the sampler\r\n     * @param uniform \r\n     * @param n \r\n     *  uniform sampler2D u_Sampler\r\n     *  ctx.uSampler('u_Sampler',0);\r\n     */\r\n    public uSampler2D(uniform: string, n: number) {\r\n        this.bind();\r\n        this._ctx._gl.uniform1i(this.getUniformLocation(uniform), n);\r\n    }\r\n\r\n    public bind(): Program {\r\n        if (Program.BINDING === this) {\r\n            return this;\r\n        }\r\n        this._ctx._gl.useProgram(this._glProgram);\r\n        Program.BINDING = this;\r\n        return this;\r\n    }\r\n\r\n    public unbind() {\r\n        if (Program.BINDING !== this)\r\n            return;\r\n        this._ctx._gl.useProgram(null);\r\n        Program.BINDING = null;\r\n    }\r\n\r\n    protected _createGLProgram(vsSource: string, fsSource: string): WebGLProgram {\r\n\r\n        let gl: WebGLRenderingContext = this._ctx._gl;\r\n        let vsShader: WebGLShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\r\n        gl.shaderSource(vsShader, vsSource);\r\n        gl.compileShader(vsShader);\r\n\r\n        if (__DEBUG__) {\r\n            if (!gl.getShaderParameter(vsShader, gl.COMPILE_STATUS)) {\r\n                console.error(`vertex shader compiling error occurred: ${gl.getShaderInfoLog(vsShader)}`);\r\n                gl.deleteShader(vsShader);\r\n            }\r\n        }\r\n\r\n        let fsShader: WebGLShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\r\n        gl.shaderSource(fsShader, fsSource);\r\n        gl.compileShader(fsShader);\r\n\r\n        if (__DEBUG__) {\r\n            // 立刻查询是否有编译错误\r\n            if (!gl.getShaderParameter(vsShader, gl.COMPILE_STATUS)) {\r\n                console.error(`fragment shader compiling error occurred: ${gl.getShaderInfoLog(vsShader)}`);\r\n                gl.deleteShader(fsShader);\r\n            }\r\n        }\r\n\r\n        let pm: WebGLProgram = gl.createProgram() as WebGLProgram;\r\n        gl.attachShader(pm, vsShader);\r\n        gl.attachShader(pm, fsShader);\r\n        gl.linkProgram(pm);\r\n\r\n        if (__DEBUG__) {\r\n            if (!gl.getProgramParameter(pm, gl.LINK_STATUS)) {\r\n                console.error(`Error linking shader: ${gl.getProgramInfoLog(pm)}`);\r\n                gl.deleteProgram(pm);\r\n            }\r\n        }\r\n        // clean up shaders\r\n        gl.deleteShader(vsShader);\r\n        gl.deleteShader(fsShader);\r\n\r\n        return pm;\r\n    }\r\n\r\n    dispose() {\r\n        this.unbind();\r\n        this._ctx._gl.deleteProgram(this._glProgram);\r\n    }\r\n\r\n}\r\n","import { Context } from \"./Context\";\r\n\r\nexport class VertexBuffer {\r\n\r\n    protected static BINDING: VertexBuffer | null;\r\n\r\n    protected _ctx: Context;\r\n    protected _glBuffer: WebGLBuffer;\r\n    protected _glUsage: number | undefined; // gl.DYNAMIC_DRAW | gl.STATIC_DRAW\r\n    // protected _data: Float32Array;\r\n    protected _attributes: Attribute[] = [];\r\n    protected _stride: number = 0 // 一个点的总 bytes 数\r\n\r\n    constructor(ctx: Context) {\r\n\r\n        this._ctx = ctx;\r\n        let gl = this._ctx._gl;\r\n        this._glBuffer = gl.createBuffer() as WebGLBuffer;\r\n    }\r\n\r\n    setData(data: Float32Array, dynamic: boolean = true): void {\r\n        this.bind();\r\n        let gl = this._ctx._gl;\r\n        this._glUsage = dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n        gl.bufferData(gl.ARRAY_BUFFER, data, this._glUsage)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @location: 调用 shader.getAttributeLocation(\"a_position\") 获得\r\n     * @numElements: float vec2 vec3 vec4 分别对应1,2,3,4\r\n     */\r\n    addAttribute(location: number, numElements: 1 | 2 | 3 | 4): VertexBuffer {\r\n        let item = new Attribute(location, numElements);\r\n        item.byteOffset = this._stride;\r\n        this._attributes.push(item);\r\n        this._stride += numElements * 4; // 1个 float = 4 bytes\r\n        return this;\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        this.bind()\r\n        let gl = this._ctx._gl;\r\n        let item: Attribute;\r\n        for (let i = 0; i < this._attributes.length; i++) {\r\n            item = this._attributes[i];\r\n            gl.enableVertexAttribArray(item.location);\r\n            gl.vertexAttribPointer(\r\n                item.location,\r\n                item.numElements,\r\n                gl.FLOAT, // item.type\r\n                false,\r\n                this._stride,\r\n                item.byteOffset\r\n            )\r\n        }\r\n    }\r\n\r\n    bind() {\r\n        if (VertexBuffer.BINDING === this)\r\n            return;\r\n        let gl = this._ctx._gl;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._glBuffer);\r\n        VertexBuffer.BINDING = this;\r\n    }\r\n\r\n    unbind() {\r\n        if (VertexBuffer.BINDING !== this)\r\n            return;\r\n        let gl = this._ctx._gl;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        VertexBuffer.BINDING = null;\r\n    }\r\n\r\n    dispose() {\r\n        this.unbind();\r\n        this._ctx._gl.deleteBuffer(this._glBuffer);\r\n    }\r\n}\r\n\r\nclass Attribute {\r\n    byteOffset: number = 0; // 整个元素在开始的byte偏移\r\n    // type = gl.FLOAT\r\n    constructor(public location: number, public numElements: 1 | 2 | 3 | 4) { }\r\n}","import { Context } from \"./Context\";\r\n\r\nexport class IndexBuffer {\r\n\r\n    protected static BINDING: IndexBuffer | null;\r\n    protected _ctx: Context;\r\n    protected _glBuffer: WebGLBuffer;\r\n    protected _glUsage: number; // gl.DYNAMIC_DRAW | gl.STATIC_DRAW\r\n\r\n    constructor(ctx: Context, dynamic: boolean = false) {\r\n\r\n        this._ctx = ctx;\r\n        let gl = this._ctx._gl;\r\n        this._glBuffer = gl.createBuffer() as WebGLBuffer;\r\n        this._glUsage = dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n    }\r\n\r\n    setData(data: Uint16Array) {\r\n        this.bind();\r\n        let gl = this._ctx._gl;\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, this._glUsage)\r\n\r\n    }\r\n\r\n    bind() {\r\n        if (IndexBuffer.BINDING === this)\r\n            return;\r\n        let gl = this._ctx._gl;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._glBuffer);\r\n        IndexBuffer.BINDING = this;\r\n    }\r\n\r\n    unbind() {\r\n        if (IndexBuffer.BINDING !== this)\r\n            return;\r\n        let gl = this._ctx._gl;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        IndexBuffer.BINDING = null;\r\n    }\r\n\r\n    dispose() {\r\n        this.unbind();\r\n        this._ctx._gl.deleteBuffer(this._glBuffer);\r\n    }\r\n}","import { Context } from \"./Context\";\r\n// TODO: gl.TEXTURE_CUBE_MAP\r\nexport class Texture {\r\n\r\n    protected static BINDING: Texture | null;\r\n    protected _ctx: Context;\r\n    protected _glTexture: WebGLTexture;\r\n    protected _boundUnit: number = 0;\r\n    protected _useMipMaps: boolean = false;\r\n\r\n    constructor(ctx: Context, image?: HTMLImageElement, useMipMaps: boolean = false) {\r\n        this._ctx = ctx;\r\n        this._glTexture = ctx._gl.createTexture() as WebGLTexture;\r\n        this._useMipMaps = useMipMaps;\r\n        if (image)\r\n            this.image = image;\r\n    }\r\n\r\n    set image(image: HTMLImageElement) {\r\n        if (__DEBUG__) {\r\n            if (!this.isPowerOf2(image.width) || !this.isPowerOf2(image.height))\r\n                console.warn('image size is not power of 2');\r\n        }\r\n\r\n        this.bind(this._boundUnit);\r\n        let gl = this._ctx._gl;\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n        // To prevent texture wrappings\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        if (this._useMipMaps && this.isPowerOf2(image.width) && this.isPowerOf2(image.height)) {\r\n\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n        } else {\r\n\r\n            // For pixel-graphics where you want the texture to look \"sharp\" do the following:\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        }\r\n    }\r\n\r\n    bind(unit: number = 0) {\r\n        if (Texture.BINDING === this && unit === this._boundUnit)\r\n            return unit;\r\n        let gl = this._ctx._gl;\r\n        this._boundUnit = unit;\r\n        gl.activeTexture(gl.TEXTURE0 + unit);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._glTexture);\r\n        Texture.BINDING = this;\r\n        return unit;\r\n    }\r\n\r\n    unbind() {\r\n        if (Texture.BINDING !== this)\r\n            return;\r\n        let gl = this._ctx._gl;\r\n        gl.activeTexture(gl.TEXTURE0 + this._boundUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        Texture.BINDING = null;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 只有三个值合法\r\n     * \r\n        gl.MIRRORED_REPEAT\r\n        gl.CLAMP_TO_EDGE;\r\n        gl.REPEAT\r\n     */\r\n    setWraps(uWrap: number, vWrap: number): void {\r\n        this.bind(this._boundUnit);\r\n        let gl = this._ctx._gl;\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, uWrap);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, vWrap);\r\n    }\r\n\r\n    // NEAREST = choose 1 pixel from the biggest mip\r\n    // LINEAR = choose 4 pixels from the biggest mip and blend them\r\n    // NEAREST_MIPMAP_NEAREST = choose the best mip, then pick one pixel from that mip\r\n    // LINEAR_MIPMAP_NEAREST = choose the best mip, then blend 4 pixels from that mip\r\n    // NEAREST_MIPMAP_LINEAR = choose the best 2 mips, choose 1 pixel from each, blend them\r\n    // LINEAR_MIPMAP_LINEAR = choose the best 2 mips.choose 4 pixels from each, blend them\r\n    public setFilters(minFilter: number, magFilter: number): void {\r\n        let gl = this._ctx._gl;\r\n        this.bind(this._boundUnit);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n    }\r\n\r\n    protected isPowerOf2(n: number): boolean {\r\n        return (n & (n - 1)) === 0;\r\n    }\r\n}","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Vector2D {\n  constructor(x = 0, y = 0) {\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    this.x = x;\n    this.y = y;\n  }\n  /**\r\n   * 两点间线性插值\r\n   * @param t t 为 0 ~ 1 之间的小数，为 0 则结果为 v1，为 1 则结果为 v2\r\n   * @param out 省略则返回一个新创建的 Vector2D 否则复制到 out 向量\r\n   */\n\n\n  static Lerp(v1, v2, t = 0, out) {\n    let nx = v1.x + (v2.x - v1.x) * t;\n    let ny = v1.y + (v2.y - v1.y) * t; // same as\n    // nx = v1.x * (1 - t) + v2.x * t;\n    // ny = v1.y * (1 - t) + v2.y * t;\n\n    if (out) {\n      out.x = nx;\n      out.y = ny;\n      return out;\n    }\n\n    return new Vector2D(nx, ny);\n  }\n  /**\r\n   * 返回一个指定长度的随机方向向量\r\n   * @static\r\n   * @param scale 向量长度，默认为1\r\n   * @param out 省略则返回一个新创建的 Vector2D 否则复制到 out 向量\r\n   */\n\n\n  static Random(scale = 1, out) {\n    let r = Math.random() * 2 * Math.PI;\n    let nx = Math.cos(r) * scale;\n    let ny = Math.sin(r) * scale;\n\n    if (out) {\n      out.x = nx;\n      out.y = ny;\n      return out;\n    }\n\n    return new Vector2D(nx, ny);\n  }\n  /**\r\n   * 取得两向量之间夹角的弧度值，逆时针为正    \r\n   * @static \r\n   * @param {Vector2D} v1\r\n   * @param {Vector2D} v2\r\n   * @returns {number} 两向量之间夹角，单位为弧度得\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  static AngleBetween(v1, v2) {\n    return Math.atan2(v1.cross(v2), v1.dot(v2)); //  tan = sin / cos\n  }\n  /**\r\n   * 极坐标转换为笛卡尔坐标 \r\n   * \r\n   * @static\r\n   * @param {number} len 半径长度\r\n   * @param {number} radians 弧度值\r\n   * @returns\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  static fromPolar(len, radians, out) {\n    let nx = len * Math.cos(radians);\n    let ny = len * Math.sin(radians);\n\n    if (out) {\n      out.x = nx;\n      out.y = ny;\n      return out;\n    }\n\n    return new Vector2D(nx, ny);\n  } // getter\n  // ------------------------------------------\n\n  /**\r\n   * 取向量长度\r\n   * @type {number}\r\n   * @memberOf Vector2D\r\n   */\n\n\n  get length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  /**\r\n   * 设置向量长度\r\n   * @memberOf Vector2D\r\n   */\n\n\n  set length(value) {\n    let angle = Math.atan2(this.y, this.x);\n    this.x = Math.cos(angle) * value;\n    this.y = Math.sin(angle) * value;\n  }\n  /**\r\n   * 取向量长度的平方，由于不用开方运算，效率更高\r\n   * @readonly\r\n   * @type {number}\r\n   * @memberOf Vector2D\r\n   */\n\n\n  get lengthSquared() {\n    return this.x * this.x + this.y * this.y;\n  }\n  /**\r\n   * 是否为0向量\r\n   * @readonly\r\n   * @type {boolean}\r\n   * @memberOf Vector2D\r\n   */\n\n\n  get isZero() {\n    return this.x === 0 && this.y === 0;\n  } // public methods\n  // ----------------------------------------\n\n  /**\r\n   * 向量相加\r\n   * \r\n   * @param {Vector2D} v\r\n   * @returns {Vector2D} this = this + v\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n  /**\r\n   * 向量相减\r\n   * @param {Vector2D} v\r\n   * @return {Vector2D} this = this - v\r\n   */\n\n\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n  /**\r\n   * 向量相乘\r\n   * @param {Vector2D} v\r\n   * @returns {Vector2D} this = this multiply v \r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n  /**\r\n   * 向量相除\r\n   * \r\n   * @param {Vector2D} v\r\n   * @returns {Vector2D} this  = this / v\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  }\n  /**\r\n   * 缩放向量\r\n   * \r\n   * @param {number} s\r\n   * @returns {Vector2D} this = this * s\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  scale(s) {\n    this.x *= s;\n    this.y *= s;\n    return this;\n  }\n  /**\r\n   * 基于某个点缩放\r\n   * todo: 图形实例\r\n   * @param {Vector2D} point 基于该点缩放\r\n   * @param {number} sx (description)\r\n   * @param {number} sy (description)\r\n   * @returns {Vector2D} (description)\r\n   */\n\n\n  scaleAbout(point, sx, sy) {\n    ///////////////////////////\n    // |sx  0  px(1-sx)|     x\n    // |0  sy  py(1-sy)|  *  y\n    // |0   0      1   |     1\n    ////////////////////////////\n    this.x = sx * this.x + point.x * (1 - sx);\n    this.y = sy * this.y + point.y * (1 - sy);\n    return this;\n  }\n  /**\r\n   * 与缩放过的v相加\r\n   * @param {Vector2D} v\r\n   * @param {number} scale\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  scaleAndAdd(v, scale) {\n    this.x = this.x + v.x * scale;\n    this.y = this.y + v.y * scale;\n    return this;\n  }\n  /**\r\n   * 返回从此点到p2点之间的距离\r\n   */\n\n\n  distanceTo(p2) {\n    let x = p2.x - this.x;\n    let y = p2.y - this.y;\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\r\n   * 此点到p2距离的平方\r\n   */\n\n\n  squaredDistanceTo(p2) {\n    let x = p2.x - this.x;\n    let y = p2.y - this.y;\n    return x * x + y * y;\n  }\n  /**\r\n   * x,y取负\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n  /**\r\n   * 转为单位向量,数学上经常在向量上加个小帽子表示 :)\r\n   * @warning 修改自身\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  normalize() {\n    let len = this.x * this.x + this.y * this.y;\n\n    if (len === 0) {\n      this.x = 1;\n      this.y = 0;\n    } else {\n      len = 1 / Math.sqrt(len);\n      this.x *= len;\n      this.y *= len;\n    }\n\n    return this;\n  } // ----------------------点乘的性质--------------------------//\n  // a点乘b == 0 ，两向量垂直\n  // a点乘b > 0 ，同向（夹角小于90度）\n  // a点乘b < 0 ,反向（夹角大于90度）\n  // a点乘b ==  length(a) * length(b)，共线且同向 (如果a与b都为单位向量则等于 +1)\n  // a点乘b == -length(a) * length(b) ,共线且逆向（如果a与b都为单位向量则等于 -1）\n  // a点乘a == a长度的平方\n  // --------------------------------------------------------//\n\n  /**\r\n   * 点乘\r\n   * 结果等于|a||b|cos夹角\r\n   * @param v\r\n   * @returns {number}\r\n   */\n\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  } // ----------------------2d cross--------------------------//\n  //\n  //    http://allenchou.net/2013/07/cross-product-of-2d-vectors/\n  //\n  //    the sign of the cross product of 2D vectors tells you whether the second vector is on the left or right side of the first vector .\n  //\n  // not the most efficient implementation\n  //   float cross(const Vec2 &a, const Vec2 &b)\n  //    {\n  ////       Vec3 v1(a.x, a.y, 0.0f);\n  ////       Vec3 v2(b.x, b.y, 0.0f);\n  //\n  //        return cross(v1, v2).z;\n  //    }\n  //\n  // --------------------------------------------------------//\n\n  /**\r\n   * 2d叉乘\r\n   * 2d叉乘并不常见，与3d不同，结果是一个数值，相当于3d叉乘的z轴\r\n   * \r\n   * @param {Vector2D} v\r\n   * @returns {number}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  cross(v) {\n    return this.x * v.y - this.y * v.x;\n  }\n  /**\r\n   * 返回左垂直向量\r\n   * \r\n   * @returns {Vector2D} 非单位向量\r\n   * @memberOf Vector2D\r\n   */\n\n\n  leftHandNormal() {\n    let xx = this.x;\n    this.x = -this.y;\n    this.y = xx;\n    return this;\n  }\n  /**\r\n   * 返回右垂直向量\r\n   * \r\n   * @returns {Vector2D} 非单位向量\r\n   * @memberOf Vector2D\r\n   */\n\n\n  rightHandNormal() {\n    let xx = this.x;\n    this.x = this.y;\n    this.y = -xx;\n    return this;\n  }\n  /**\r\n   * 将极坐标转为笛卡尔坐标\r\n   * \r\n   * @warning 修改自身\r\n   * @param len 半径长度\r\n   * @param radians 弧度值 ,逆时针正角度\r\n   * @param return 返回自身\r\n   */\n\n\n  fromPolar(len, radians) {\n    this.x = len * Math.cos(radians);\n    this.y = len * Math.sin(radians);\n    return this;\n  }\n  /**\r\n    * 将此向量转为极坐标输出\r\n    * \r\n    * @returns {{ len: number; radians: number }} 角度为弧度值表示\r\n    * \r\n    * @memberOf Vector2D\r\n    */\n\n\n  toPolar() {\n    let len = Math.sqrt(this.x * this.x + this.y * this.y);\n    let radians = Math.atan2(this.y, this.x);\n    return {\n      len: len,\n      radians: radians\n    };\n  }\n  /**\r\n   * 按最大长度夹断 \r\n   * \r\n   * @warning 修改本身\r\n   * @param {number} max 最大长度\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  clampMax(max) {\n    let l = Math.sqrt(this.x * this.x + this.y * this.y);\n\n    if (l > max) {\n      l = max / l;\n      this.x *= l;\n      this.y *= l;\n    }\n\n    return this;\n  }\n  /**\r\n    * 绕原点旋转一个角度 ，逆时针为正，浮点数计算会有误差\r\n    * \r\n    * @param {number} radians 弧度值\r\n    * @returns {Vector2D} 旋转后的向量\r\n    * \r\n    * @memberOf Vector2D\r\n    */\n\n\n  rotate(radians) {\n    // （矩阵乘法） \n    ////////////////////////////////\n    //  |cos  -sin  0|      x\n    //  |sin   cos  0|  *   y\n    //  | 0     0   1|      1\n    let cos = Math.cos(radians);\n    let sin = Math.sin(radians);\n    let _x = this.x;\n    let _y = this.y;\n    this.x = _x * cos - _y * sin;\n    this.y = _x * sin + _y * cos;\n    return this;\n  }\n  /**\r\n   * 绕某个点旋转\r\n   * todo: example\r\n   * \r\n   * @param {number} radians 弧度值表示的角度\r\n   * @param {Vector2D} point\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  rotateAbout(radians, point) {\n    let c = this.clone();\n    this.sub(point).rotate(radians).add(c);\n    return this;\n  }\n  /**\r\n   * 旋转一个向量表示的角度，与rotate方法类似，但节省了计算sin/cos所以效率更高\r\n   * 要注意如果v非单位向量则旋转后向量长度会改变\r\n   * \r\n   * @param {Vector2D} v\r\n   * @param {Vector2D} [out]\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  rotateByVector(v) {\n    let _x = this.x;\n    let _y = this.y;\n    this.x = _x * v.x - _y * v.y;\n    this.y = _x * v.y + _y * v.x;\n    return this;\n  }\n  /**\r\n   *  取得此向量在v向量上的投影向量\r\n   * \r\n   * @param {Vector2D} v\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  getProjV(v) {\n    //\n    //         /|\n    //   this / | \n    //       /  |\n    //      --------  v\n    //      ProjV\n    //\n    // -------------------------\n    //\n    //     |a||b|cos\n    //    ----------- b\n    let dp = this.x * v.x + this.y * v.y; // this.dot(v)\n\n    let f = dp / (v.x * v.x + v.y * v.y); // divide by |b|^2\n\n    this.x = f * v.x;\n    this.y = f * v.y;\n    return this;\n  }\n  /**\r\n    * \r\n    * 取得此向量在v法线上的投影向量\r\n    * \r\n    * @param {Vector2D} v\r\n    * @returns {Vector2D}\r\n    * \r\n    * @memberOf Vector2D\r\n    */\n\n\n  getPerpV(v) {\n    //---------------------------------\n    //           /|\n    //     this / | PerpV\n    //         /  |\n    //        --------\n    //            v\n    // --------------------------------\n    // var v:Vector2D = this.getProjV(v);\n    let dp = this.x * v.x + this.y * v.y; // this.dot(v)\n\n    let f = dp / (v.x * v.x + v.y * v.y); // divide by |b|^2\n\n    this.x = f * v.x;\n    this.y = f * v.y;\n    return this;\n  }\n  /**\r\n   * 根据入射角 = 反射角理论，计算此向量经过法向量反射后的向量\r\n   * @param n 单位法向量\r\n   * @returns {Vector2D} 反射后得到的向量\r\n   */\n\n\n  reflect(n) {\n    //  ---------------------------\n    //  tail\\  |  / head\n    //       \\ |n/\n    //   head \\|/ tail\n    //    ------------\n    //  --------------------------  \n    // v = u - 2(u.n)n\n    let nc = n.clone(); // 不能改变 n\n\n    this.sub(nc.scale(2 * this.dot(nc)));\n    return this;\n  }\n  /**\r\n   * 从另一个向量拷贝 xy 值\r\n   * \r\n   * @param {Vector2D} v\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  copyFrom(v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n  /**\r\n   * 重设 xy 值 \r\n   * \r\n   * @warning 此方法修改自身\r\n   * @param {number} [x=0]\r\n   * @param {number} [y=0]\r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  reset(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  /**\r\n   * 复制一个向量\r\n   * \r\n   * @returns {Vector2D}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n  /**\r\n   * 输出字符串\r\n   * \r\n   * @returns {string}\r\n   * \r\n   * @memberOf Vector2D\r\n   */\n\n\n  toString() {\n    return \"[Vector2D] (x:\" + this.x + \" ,y:\" + this.y + \")\";\n  }\n\n}\n\nclass Vector3D {\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"z\", void 0);\n\n    _defineProperty(this, \"w\", void 0);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n\n  get length() {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  get lengthSquared() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  static angleBetween(a, b) {\n    return Math.acos(a.dotProduct(b) / (a.length * b.length));\n  }\n  /**\r\n   * [static] Returns the distance between two points.\r\n   */\n\n\n  static distance(pt1, pt2) {\n    var x = pt1.x - pt2.x;\n    var y = pt1.y - pt2.y;\n    var z = pt1.z - pt2.z;\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n\n  add(a) {\n    this.x += a.x;\n    this.y += a.y;\n    this.z += a.z;\n    return this;\n  }\n\n  sub(a) {\n    this.x -= a.x;\n    this.y -= a.y;\n    this.z -= a.z;\n    return this;\n  }\n  /**\r\n   * 是否为0向量\r\n   */\n\n\n  get isZero() {\n    return this.x === 0 && this.y === 0 && this.z === 0;\n  }\n\n  equals(toCompare, allFour = false) {\n    return this.x === toCompare.x && this.y === toCompare.y && this.z === toCompare.z && (allFour ? this.w === toCompare.w : true);\n  }\n\n  nearEquals(toCompare, tolerance = 0.0001, allFour = false) {\n    let abs = Math.abs;\n    return abs(this.x - toCompare.x) < tolerance && abs(this.y - toCompare.y) < tolerance && abs(this.z - toCompare.z) < tolerance && (allFour ? abs(this.w - toCompare.w) < tolerance : true);\n  }\n\n  clone() {\n    return new Vector3D(this.x, this.y, this.z, this.w);\n  }\n  /**\r\n   * Copies all of vector data from the source Vector3D object into the calling Vector3D object.\r\n   */\n\n\n  copyFrom(sourceVector3D) {\n    this.x = sourceVector3D.x;\n    this.y = sourceVector3D.y;\n    this.z = sourceVector3D.z;\n    this.w = sourceVector3D.w;\n  }\n  /**\r\n   * Sets the members of Vector3D to the specified values\r\n   */\n\n\n  setTo(xa, ya, za) {\n    this.x = xa;\n    this.y = ya;\n    this.z = za;\n  }\n\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n  }\n\n  scaleBy(s) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n  }\n\n  normalize() {\n    var leng = this.length;\n    if (leng != 0) this.scaleBy(1 / leng);\n    return leng;\n  }\n\n  crossProduct(a) {\n    return new Vector3D(this.y * a.z - this.z * a.y, this.z * a.x - this.x * a.z, this.x * a.y - this.y * a.x);\n  }\n\n  dotProduct(a) {\n    return this.x * a.x + this.y * a.y + this.z * a.z;\n  }\n\n  project() {\n    if (this.w == 0) return;\n    this.x /= this.w;\n    this.y /= this.w;\n    this.z /= this.w;\n  }\n\n  toString() {\n    return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z:\" + this.z + \", w:\" + this.w + \")\";\n  }\n\n}\n\n_defineProperty(Vector3D, \"X_AXIS\", new Vector3D(1, 0, 0));\n\n_defineProperty(Vector3D, \"Y_AXIS\", new Vector3D(0, 1, 0));\n\n_defineProperty(Vector3D, \"Z_AXIS\", new Vector3D(0, 0, 1));\n\nclass Matrix2D {\n  /**\r\n   * 创建一个3*3矩阵\r\n   * \r\n   * 使用矩阵后乘列向量的方式执行变换，与 glsl 里顺序一致\r\n  ```\r\n  |  a   b   tx |      x\r\n  |  c   d   ty |  *   y\r\n  |  0   0   1  |      1\r\n  ```\r\n  可以使用静态方法更方便的创建矩阵\r\n  Matrix2D.FromRotation(rad: number)\r\n  Matrix2D.FromTranslation(posX: number, posY: number)\r\n  Matrix2D.FromScaling()\r\n  Matrix2D.SRT()\r\n   */\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    _defineProperty(this, \"a\", void 0);\n\n    _defineProperty(this, \"b\", void 0);\n\n    _defineProperty(this, \"c\", void 0);\n\n    _defineProperty(this, \"d\", void 0);\n\n    _defineProperty(this, \"tx\", void 0);\n\n    _defineProperty(this, \"ty\", void 0);\n\n    _defineProperty(this, \"_temp\", new Float32Array(9));\n\n    _defineProperty(this, \"multiply\", this.prepend);\n\n    // 使用矩阵后乘列向量的方式执行变换，与glsl里顺序一致\n    // |  a   b   tx |      x\n    // |  c   d   ty |  *   y\n    // |  0   0   1  |      1\n    // 变换后的新坐标为 \n    // x' = ax + by + tx\n    // y' = cx + dy + ty\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n  }\n  /**\r\n    * 创建一个新的矩阵，顺序执行 scale -> rotate -> translate\r\n    * \r\n    * @static\r\n    * @param {number} [scaleX=1]\r\n    * @param {number} [scaleY=1]\r\n    * @param {number} [rad=0]\r\n    * @param {number} [tx=0]\r\n    * @param {number} [ty=0]\r\n    * @param {Matrix2D} [out]\r\n    * @returns {Matrix2D}\r\n    * \r\n    * @memberOf Matrix2D\r\n    */\n\n\n  static SRT(scaleX = 1, scaleY = 1, rad = 0, tx = 0, ty = 0, out) {\n    // 相当于\n    // let m: Matrix2D = new Matrix2D();\n    // m.scale(scaleX, scaleY);\n    // m.rotate(rotation);\n    // m.translate(tx, ty);\n    let cos = Math.cos(rad);\n    let sin = Math.sin(rad);\n\n    if (out) {\n      out.a = cos * scaleX;\n      out.b = -sin * scaleY;\n      out.c = sin * scaleX;\n      out.d = cos * scaleY;\n      out.tx = tx;\n      out.ty = ty;\n      return out;\n    }\n\n    return new Matrix2D(cos * scaleX, -sin * scaleY, sin * scaleX, cos * scaleY, tx, ty);\n  }\n  /**\r\n   * 创建缩放矩阵\r\n   * \r\n   * @static\r\n   * @param {number} scaleX (description)\r\n   * @param {number} scaleY (description)\r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  static FromScaling(scaleX, scaleY) {\n    return new Matrix2D(scaleX, 0, 0, scaleY, 0, 0);\n  }\n  /**\r\n   * 创建位置矩阵\r\n   * \r\n   * @static\r\n   * @param {number} posX (description)\r\n   * @param {number} posY (description)\r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  static FromTranslation(posX, posY) {\n    return new Matrix2D(1, 0, 0, 1, posX, posY);\n  }\n\n  /**\r\n   * 创建旋转矩阵\r\n   * \r\n   * @static\r\n   * @param {number} rad 弧度值\r\n   * @returns {Matrix2D} (description)\r\n   */\n  static FromRotation(rad) {\n    let s = Math.sin(rad);\n    let c = Math.cos(rad);\n    return new Matrix2D(c, -s, s, c, 0, 0);\n  }\n\n  get float32Array() {\n    return this.toArray(this._temp, true);\n  }\n  /**\r\n   * 2*2矩阵行列式，非零则矩阵可逆\r\n   * @returns {number}\r\n   */\n\n\n  get determinant() {\n    return this.a * this.d - this.b * this.c;\n  }\n  /**\r\n   * identity\r\n   * \r\n   * @returns {Matrix2D}\r\n   * \r\n   * @memberOf Matrix2D\r\n   */\n\n\n  identity() {\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n    return this;\n  }\n  /**\r\n   * 添加一个移动变换\r\n   * \r\n   * @param {number} tx (description)\r\n   * @param {number} ty (description)\r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  translate(tx, ty) {\n    //  1   0   tx     \n    //  0   1   ty  *  原矩阵\n    //  0   0   1     \n    this.tx += tx;\n    this.ty += ty;\n    return this;\n  }\n  /**\r\n   * 添加一个缩放变换\r\n   * \r\n   * @param {number} sx (description)\r\n   * @param {number} sy (description)\r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  scale(sx, sy) {\n    //  sx  0   0    \n    //  0   sy  0  *  原矩阵\n    //  0   0   1     \n    this.a *= sx;\n    this.b *= sx;\n    this.c *= sy;\n    this.d *= sy;\n    this.tx *= sx;\n    this.ty *= sy;\n    return this;\n  }\n  /**\r\n   * 增加一个旋转变换\r\n   * \r\n   * @param {number} angle (弧度值)\r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  rotate(angle) {\n    // |  cos -sin  0|     \n    // |  sin  cos  0|  *  原矩阵\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    let _a = this.a;\n    let _b = this.b;\n    let _c = this.c;\n    let _d = this.d;\n    let _tx = this.tx;\n    let _ty = this.ty;\n    this.a = _a * cos - _c * sin;\n    this.b = _b * cos - _d * sin;\n    this.c = _a * sin + _c * cos;\n    this.d = _b * sin + _d * cos;\n    this.tx = _tx * cos - _ty * sin;\n    this.ty = _tx * sin + _ty * cos;\n    return this;\n  }\n  /**\r\n   * 在此变换矩阵之前增加一个变换\r\n   * \r\n   * this = this * m\r\n   * \r\n   * @param {Matrix2D} m (description)\r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  prepend(m) {\n    let _a = this.a;\n    let _b = this.b;\n    let _c = this.c;\n    let _d = this.d;\n    let _tx = this.tx;\n    let _ty = this.ty;\n    this.a = _a * m.a + _b * m.c;\n    this.b = _a * m.b + _b * m.d;\n    this.c = _c * m.a + _d * m.c;\n    this.d = _c * m.b + _d * m.d;\n    this.tx = _a * m.tx + _b * m.ty + _tx;\n    this.ty = _c * m.tx + _d * m.ty + _ty;\n    return this;\n  }\n  /**\r\n   * 后乘矩阵，在此变换矩阵之前增加一个变换\r\n   * \r\n   * this = this * m\r\n   * \r\n   * @memberOf Matrix2D\r\n   */\n\n\n  /**\r\n   * 前乘一个矩阵，在此变换矩阵之后增加一个变换\r\n   * \r\n   *  this = m * this\r\n   * \r\n   * @param {Matrix2D} m (description)\r\n   * @returns {Matrix2D} this\r\n   */\n  append(m) {\n    let _a = this.a;\n    let _b = this.b;\n    let _c = this.c;\n    let _d = this.d;\n    let _tx = this.tx;\n    let _ty = this.ty;\n    this.a = m.a * _a + m.b * _c;\n    this.b = m.a * _b + m.b * _d;\n    this.c = m.c * _a + m.d * _c;\n    this.d = m.c * _b + m.d * _d;\n    this.tx = m.a * _tx + m.b * _ty + m.tx;\n    this.ty = m.c * _tx + m.d * _ty + m.ty;\n    return this;\n  }\n  /**\r\n   * 用此矩阵转换一个Vector2D表示的点\r\n   * \r\n   * @param {Vector2D} p (description)\r\n   * @param {Vector2D} [out] (description)\r\n   * @returns {Vector2D} (description)\r\n   */\n\n\n  transformPoint(p, out) {\n    // |  a   b   tx |     x\n    // |  c   d   ty |  *  y\n    let nx = this.a * p.x + this.b * p.y + this.tx;\n    let ny = this.c * p.x + this.d * p.y + this.ty;\n\n    if (out) {\n      out.x = nx;\n      out.y = ny;\n      return out;\n    }\n\n    return new Vector2D(nx, ny);\n  }\n  /**\r\n   * 用此矩阵转换一个向量(仅方向，不包含平移)\r\n   * \r\n   * @param {Vector2D} v (description)\r\n   * @param {Vector2D} [out=undefined] (description)\r\n   * @returns {Vector2D} (description)\r\n   */\n\n\n  transformVector(v, out) {\n    // |  a   b   tx |     x\n    // |  c   d   ty |  *  y\n    let nx = this.a * v.x + this.b * v.y;\n    let ny = this.c * v.x + this.d * v.y;\n\n    if (out) {\n      out.x = nx;\n      out.y = ny;\n      return out;\n    }\n\n    return new Vector2D(nx, ny);\n  }\n  /**\r\n   * 矩阵求逆\r\n   * \r\n   * @returns {Matrix2D} (description)\r\n   */\n  // todo: 错的貌似\n\n\n  invert() {\n    let det = this.a * this.d - this.b * this.c;\n\n    if (det !== 0) {\n      det = 1 / det;\n      let _a = this.a;\n      let _b = this.b;\n      let _c = this.c;\n      let _d = this.d;\n      let _tx = this.tx;\n      let _ty = this.ty;\n      this.a = _d * det;\n      this.b = -_b * det;\n      this.c = -_c * det;\n      this.d = _a * det;\n      this.tx = (_c * _ty - _d * _tx) * det;\n      this.ty = (_b * _tx - _a * _ty) * det;\n      return this;\n    }\n\n    return null;\n  }\n  /**\r\n   * copyFrom\r\n   * \r\n   * @param {Matrix2D} m (description)\r\n   * @returns {Matrix2D} 返回this\r\n   */\n\n\n  copyFrom(m) {\n    this.a = m.a;\n    this.b = m.b;\n    this.c = m.c;\n    this.d = m.d;\n    this.tx = m.tx;\n    this.ty = m.ty;\n    return this;\n  }\n  /**\r\n   * copyTo\r\n   * \r\n   * @param {Matrix2D} out (description)\r\n   */\n\n\n  copyTo(out) {\n    out.a = this.a;\n    out.b = this.b;\n    out.c = this.c;\n    out.d = this.d;\n    out.tx = this.tx;\n    out.ty = this.ty;\n    return out;\n  }\n  /**\r\n   * clone\r\n   * \r\n   * @returns {Matrix2D} (description)\r\n   */\n\n\n  clone() {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  }\n  /**\r\n   * 转为Float32Array, 之后可以用 gl.uniformMatrix3fv 上传\r\n   * @param {boolean} [columnMajor=true] WebGL默认需要column major,所以默认会转置\r\n   * @param {Float32Array} [out=undefined] (description)\r\n   * @returns {Float32Array} (description)\r\n   */\n\n\n  toArray(out, columnMajor = true) {\n    if (out === undefined) {\n      out = new Float32Array(9);\n    } // webGL 默认需要column major这种格式的矩阵\n    // [a,c,0,b,d,0,tx,ty,1]\n    //\n    // | a  c  0 |\n    // | b  d  0 |\n    // | tx ty 1 |\n    //\n    // 而我们的矩阵是\n    //\n    // | a  b  tx|\n    // | c  d  ty|\n    // | 0  0  1 |\n    //\n    // 所以默认需要转置\n\n\n    if (columnMajor) {\n      out[0] = this.a;\n      out[1] = this.c;\n      out[2] = 0;\n      out[3] = this.b;\n      out[4] = this.d;\n      out[5] = 0;\n      out[6] = this.tx;\n      out[7] = this.ty;\n      out[8] = 1;\n    } else {\n      out[0] = this.a;\n      out[1] = this.b;\n      out[2] = this.tx;\n      out[3] = this.c;\n      out[4] = this.d;\n      out[5] = this.ty;\n      out[6] = 0;\n      out[7] = 0;\n      out[8] = 1;\n    }\n\n    return out;\n  }\n  /**\r\n   * toString\r\n   * \r\n   * @returns {string} (description)\r\n   */\n\n\n  toString() {\n    return \"[Matrix2D] (a:\" + this.a + \" ,b:\" + this.b + \" ,c:\" + this.c + \" ,d:\" + this.d + \" ,tx:\" + this.tx + \" ,ty:\" + this.ty + \")\";\n  }\n\n}\n\nclass Matrix3D {\n  /*\r\n        x   y   z   t\r\n     -------------------\r\n     | n11 n12 n13 n14 |\r\n     | n21 n22 n23 n24 |\r\n     | n31 n32 n33 n34 |\r\n     | n41 n42 n43 n44 |\r\n  */\n  // tx\n  // ty\n  // tz\n  constructor(p11 = 1, p12 = 0, p13 = 0, p14 = 0, p21 = 0, p22 = 1, p23 = 0, p24 = 0, p31 = 0, p32 = 0, p33 = 1, p34 = 0, p41 = 0, p42 = 0, p43 = 0, p44 = 1) {\n    _defineProperty(this, \"n11\", 1);\n\n    _defineProperty(this, \"n12\", 0);\n\n    _defineProperty(this, \"n13\", 0);\n\n    _defineProperty(this, \"n14\", 0);\n\n    _defineProperty(this, \"n21\", 0);\n\n    _defineProperty(this, \"n22\", 1);\n\n    _defineProperty(this, \"n23\", 0);\n\n    _defineProperty(this, \"n24\", 0);\n\n    _defineProperty(this, \"n31\", 0);\n\n    _defineProperty(this, \"n32\", 0);\n\n    _defineProperty(this, \"n33\", 1);\n\n    _defineProperty(this, \"n34\", 0);\n\n    _defineProperty(this, \"n41\", 0);\n\n    _defineProperty(this, \"n42\", 0);\n\n    _defineProperty(this, \"n43\", 0);\n\n    _defineProperty(this, \"n44\", 1);\n\n    _defineProperty(this, \"_temp\", new Float32Array(16));\n\n    this.n11 = p11;\n    this.n12 = p12;\n    this.n13 = p13;\n    this.n14 = p14;\n    this.n21 = p21;\n    this.n22 = p22;\n    this.n23 = p23;\n    this.n24 = p24;\n    this.n31 = p31;\n    this.n32 = p32;\n    this.n33 = p33;\n    this.n34 = p34;\n    this.n41 = p41;\n    this.n42 = p42;\n    this.n43 = p43;\n    this.n44 = p44;\n  }\n  /**\r\n   * column major order\r\n   */\n\n\n  get float32Array() {\n    return this.toArray(this._temp, true);\n  }\n\n  set float32Array(arr) {\n    this.fromArray(arr, true);\n  }\n\n  setLookAt(eyeX, eyeY, eyeZ, targetX, targetY, targetZ, upX, upY, upZ) {\n    let fx, fy, fz, rlf, rx, ry, rz, rls, ux, uy, uz; // foward vector\n\n    fx = eyeX - targetX;\n    fy = eyeY - targetY;\n    fz = eyeZ - targetZ; // Normalize foward.\n\n    rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\n    fx *= rlf;\n    fy *= rlf;\n    fz *= rlf; // Calculate cross product of f and up.\n\n    rx = fy * upZ - fz * upY;\n    ry = fz * upX - fx * upZ;\n    rz = fx * upY - fy * upX; // Normalize right vector.\n\n    rls = 1 / Math.sqrt(rx * rx + ry * ry + rz * rz);\n    rx *= rls;\n    ry *= rls;\n    rz *= rls; // Calculate cross product of r and f.\n\n    ux = ry * fz - rz * fy;\n    uy = rz * fx - rx * fz;\n    uz = rx * fy - ry * fx;\n    let t = this; // Set to this.\n\n    t.n11 = rx;\n    t.n12 = ux;\n    t.n13 = fx;\n    t.n14 = eyeX;\n    t.n21 = ry;\n    t.n22 = uy;\n    t.n23 = fy;\n    t.n24 = eyeY;\n    t.n31 = rz;\n    t.n32 = uz;\n    t.n33 = fz;\n    t.n34 = eyeZ;\n    t.n41 = 0;\n    t.n42 = 0;\n    t.n43 = 0;\n    t.n44 = 1;\n  }\n\n  identity() {\n    let t = this;\n    t.n11 = 1;\n    t.n12 = 0;\n    t.n13 = 0;\n    t.n14 = 0;\n    t.n21 = 0;\n    t.n22 = 1;\n    t.n23 = 0;\n    t.n24 = 0;\n    t.n31 = 0;\n    t.n32 = 0;\n    t.n33 = 1;\n    t.n34 = 0;\n    t.n41 = 0;\n    t.n42 = 0;\n    t.n43 = 0;\n    t.n44 = 1;\n    return t;\n  }\n\n  invertTR() {\n    // this method can only be used if the matrix is a translation/rotation matrix.\n    // the below asserts will trigger if this is not the case.\n    // if (__DEBUG__) {\n    // each basis vector should be length 1\n    // Math.abs(getForwardVector().lengthSqr() - 1 ) < 0.00001\n    // Math.abs(upVector().lengthSqr() - 1 ) < 0.00001\n    // Math.abs(RightVector().lengthSqr() - 1 ) < 0.00001\n    // Math.abs(frowardVector().dot(upVector)) < 0.00001 // all vectors should be orthogonal\n    // Math.abs(frowardVector().dot(rightVector)) < 0.00001 // all vectors should be orthogonal\n    // Math.abs(rightVector().dot(upVector)) < 0.00001 // all vectors should be orthogonal\n    // }\n    return new Matrix3D();\n  }\n\n  toArray(out, columnMajor = true) {\n    let t = this;\n    if (!out) out = new Float32Array(16);\n\n    if (columnMajor) {\n      out[0] = t.n11;\n      out[4] = t.n12;\n      out[8] = t.n13;\n      out[12] = t.n14;\n      out[1] = t.n21;\n      out[5] = t.n22;\n      out[9] = t.n23;\n      out[13] = t.n24;\n      out[2] = t.n31;\n      out[6] = t.n32;\n      out[10] = t.n33;\n      out[14] = t.n34;\n      out[3] = t.n41;\n      out[7] = t.n42;\n      out[11] = t.n43;\n      out[15] = t.n44;\n    } else {\n      out[0] = t.n11;\n      out[1] = t.n12;\n      out[2] = t.n13;\n      out[3] = t.n14;\n      out[4] = t.n21;\n      out[5] = t.n22;\n      out[6] = t.n23;\n      out[7] = t.n24;\n      out[8] = t.n31;\n      out[9] = t.n32;\n      out[10] = t.n33;\n      out[11] = t.n34;\n      out[12] = t.n41;\n      out[13] = t.n42;\n      out[14] = t.n43;\n      out[15] = t.n44;\n    }\n\n    return out;\n  }\n\n  fromArray(arr, columnMajor = true) {\n    let t = this;\n\n    if (columnMajor) {\n      t.n11 = arr[0];\n      t.n12 = arr[4];\n      t.n13 = arr[8];\n      t.n14 = arr[12];\n      t.n21 = arr[1];\n      t.n22 = arr[5];\n      t.n23 = arr[9];\n      t.n24 = arr[13];\n      t.n31 = arr[2];\n      t.n32 = arr[6];\n      t.n33 = arr[10];\n      t.n34 = arr[14];\n      t.n41 = arr[3];\n      t.n42 = arr[7];\n      t.n43 = arr[11];\n      t.n44 = arr[15];\n    } else {\n      t.n11 = arr[0];\n      t.n12 = arr[1];\n      t.n13 = arr[2];\n      t.n14 = arr[3];\n      t.n21 = arr[4];\n      t.n22 = arr[5];\n      t.n23 = arr[6];\n      t.n24 = arr[7];\n      t.n31 = arr[8];\n      t.n32 = arr[9];\n      t.n33 = arr[10];\n      t.n34 = arr[11];\n      t.n41 = arr[12];\n      t.n42 = arr[13];\n      t.n43 = arr[14];\n      t.n44 = arr[15];\n    }\n  }\n\n}\n\n/**\r\n * 中心为原点,忽略z\r\n * @param width \r\n * @param height \r\n * @param flipY 如果为 false 则y轴向上为正，并且 rotation 逆时针为正。并且需要调用flipY确保贴图正确\r\n */\n\nfunction center2D(width, height, flipY = true) {\n  return new Matrix2D(2 / width, 0, 0, (flipY ? -2 : 2) / height, 0, 0);\n}\n/**\r\n * 3x3 矩阵，2D投影矩阵，忽略Z轴，直接投影为Canvas的宽高大小\r\n * \r\n * @static\r\n * @param {number} width canvas width\r\n * @param {number} height canvas height\r\n * @param flipY 如果为 false 则y轴向上为正，并且 rotation 逆时针为正。并且需要调用flipY确保贴图正确\r\n * @returns (description)\r\n */\n\nfunction topleft2D(width, height, flipY = true) {\n  if (flipY) {\n    return new Matrix2D(2 / width, 0, 0, -2 / height, -1, 1);\n  } else {\n    return new Matrix2D(2 / width, 0, 0, 2 / height, -1, -1);\n  }\n}\n\nexport { Vector2D, Vector3D, Matrix2D, Matrix3D, center2D, topleft2D };\n","import { VertexBuffer, Color, Context, Program } from \"../\";\r\nimport { Matrix2D ,Vector2D} from \"@shed/math\";\r\n\r\nconst A_POS: string = \"aPos\";\r\nconst A_COLOR: string = \"aColor\"\r\nconst U_MVP_MATRIX: string = \"uMVP\";\r\nconst V_COLOR: string = \"vColor\"\r\n\r\nexport default class Wireframe {\r\n\r\n    protected _bigBuffer: VertexBuffer;\r\n    protected _ctx: Context;\r\n    protected _shader: Program;\r\n\r\n    protected _maxVertices: number = 0;\r\n    protected _numberVertices: number = 0;\r\n    protected _vertices: Float32Array;\r\n    protected _vIdx: number = 0;\r\n    protected _color: Color;\r\n    protected _mvp: Float32Array | undefined;\r\n\r\n    constructor(ctx: Context, maxVertices: number = 10000) {\r\n        this._ctx = ctx;\r\n        this._maxVertices = maxVertices;\r\n        this._shader = this._createProgram();\r\n        this._bigBuffer = new VertexBuffer(ctx);\r\n        this._bigBuffer.addAttribute(this._shader.getAttributeLocation(A_POS), 2);\r\n        this._bigBuffer.addAttribute(this._shader.getAttributeLocation(A_COLOR), 4);\r\n        this._vertices = new Float32Array(maxVertices * 6);// big array\r\n        this._color = Color.GRAY.clone();\r\n    }\r\n\r\n    set penColor(c: Color) {\r\n        this._color = c;\r\n    }\r\n\r\n    set backgroundColor(c: Color) {\r\n        this._ctx.clearColor = c;\r\n    }\r\n\r\n    set mvpMatrix(m: Matrix2D) {\r\n        this._mvp = m.float32Array;\r\n    }\r\n\r\n    drawLine(x: number, y: number, x2: number, y2: number, color: Color = this._color) {\r\n        this._check(2);\r\n        this._vertex(x, y, color);\r\n        this._vertex(x2, y2, color);\r\n    };\r\n\r\n    drawArrow(x: number, y: number, x2: number, y2: number, color: Color = this._color) {\r\n        this._check(6);\r\n        this._vertex(x, y, color);\r\n        this._vertex(x2, y2, color);\r\n\r\n        let angle = 30 * Math.PI / 180;\r\n        let v = new Vector2D(x - x2, y - y2)\r\n        v.length = 10;\r\n        let left = v.clone().rotate(angle);\r\n        v.rotate(-angle);\r\n        this._vertex(x2, y2, color);\r\n        this._vertex(x2 + left.x, y2 + left.y, color);\r\n        this._vertex(x2, y2, color);\r\n        this._vertex(x2 + v.x, y2 + v.y, color);\r\n    }\r\n\r\n    drawRectline(x: number, y: number, x2: number, y2: number, width: number, color: Color = this._color) {\r\n        this._check(8);\r\n        let v = new Vector2D(x2 - x, y2 - y);\r\n        v.leftHandNormal().normalize().scale(width * 0.5);\r\n\r\n        let p1 = new Vector2D(x, y).add(v);\r\n        let p2 = new Vector2D(x, y).sub(v);\r\n        let p3 = new Vector2D(x2, y2).sub(v);\r\n        let p4 = new Vector2D(x2, y2).add(v);\r\n\r\n        this._vertex(p1.x, p1.y, color);\r\n        this._vertex(p2.x, p2.y, color);\r\n\r\n        this._vertex(p2.x, p2.y, color);\r\n        this._vertex(p3.x, p3.y, color);\r\n\r\n        this._vertex(p3.x, p3.y, color);\r\n        this._vertex(p4.x, p4.y, color);\r\n\r\n        this._vertex(p4.x, p4.y, color);\r\n        this._vertex(p1.x, p1.y, color);\r\n    }\r\n\r\n    drawTriangle(x: number, y: number, x2: number, y2: number, x3: number, y3: number,\r\n        color: Color = this._color,\r\n        color2: Color = this._color,\r\n        color3: Color = this._color) {\r\n        this._check(6);\r\n\r\n        this._vertex(x, y, color);\r\n        this._vertex(x2, y2, color2);\r\n\r\n        this._vertex(x2, y2, color2);\r\n        this._vertex(x3, y3, color3);\r\n\r\n        this._vertex(x3, y3, color3);\r\n        this._vertex(x, y, color);\r\n\r\n    }\r\n\r\n    drawQuad(x: number, y: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number,\r\n        color: Color = this._color,\r\n        color2: Color = this._color,\r\n        color3: Color = this._color,\r\n        color4: Color = this._color) {\r\n        this._check(8);\r\n        this._vertex(x, y, color); this._vertex(x2, y2, color2);\r\n        this._vertex(x2, y2, color2); this._vertex(x3, y3, color3);\r\n        this._vertex(x3, y3, color3); this._vertex(x4, y4, color4);\r\n        this._vertex(x4, y4, color4); this._vertex(x, y, color);\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, color: Color = this._color) {\r\n        // Matrix2D.SRT()\r\n        let r = x + width;\r\n        let d = y + height;\r\n        this.drawQuad(x, y, r, y, r, d, x, d, color, color, color, color);\r\n    }\r\n\r\n    drawX(x: number, y: number, size: number, color: Color = this._color) {\r\n        let l = x - size, r = x + size, t = y - size, b = y + size;\r\n        this._check(4)\r\n        this._vertex(l, t, color);\r\n        this._vertex(r, b, color);\r\n        this._vertex(r, t, color);\r\n        this._vertex(l, b, color);\r\n\r\n    }\r\n\r\n    drawCircle(x: number, y: number, radius: number, segments: number = 0, color: Color = this._color) {\r\n        this.drawEllipse(x, y, radius, radius, segments, color);\r\n\r\n        // if (segments === 0)\r\n        //     segments = Math.max(1, (6 * Math.cbrt(radius)) | 0);\r\n\r\n        // if (__DEBUG__) {\r\n        //     if (segments < 3)\r\n        //         console.error('segments of drawCircle() must more than 2');\r\n        // }\r\n\r\n        // let angle = 2 * Math.PI / segments;\r\n        // let v = new Vector2D(x, y - radius)\r\n        // this._check(segments * 2 + 2);\r\n        // for (let i = 0; i < segments; i++) {\r\n        //     this._vertex(v.x, v.y, color);\r\n        //     v.rotate(angle);\r\n        //     this._vertex(v.x, v.y, color);\r\n        // }\r\n    }\r\n    drawEllipse(x: number, y: number, width: number, height: number, segments: number = 10, color: Color = this._color) {\r\n        this._check(segments * 2);\r\n        if (__DEBUG__) {\r\n            if (segments < 3)\r\n                console.error('segments of drawCircle() drawEllipse must more than 2 segments');\r\n        }\r\n        let twopi = 2 * Math.PI;\r\n        let angle = twopi / segments;\r\n        let a = 0, xx = x + width, yy = y;\r\n        while (a < twopi) {\r\n            this._vertex(xx, yy, color);\r\n            a += angle;\r\n            xx = x + width * (Math.cos(a));\r\n            yy = y + height * (Math.sin(a));\r\n            this._vertex(xx, yy, color);\r\n        }\r\n    }\r\n    drawRoundedRect(x: number, y: number, width: number, height: number, radius: number) { }\r\n\r\n    drawPolygon(path: number[]) { }\r\n    drawStar(x: number, y: number) { }\r\n\r\n    drawCurve(x1: number, y1: number, cx1: number, cy1: number, cx2: number, cy2: number, x2: number, y2: number, segments: number, color: Color = this._color) {\r\n        this._check(segments * 2 + 2);\r\n\r\n        // Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\r\n        let subdiv_step = 1 / segments;\r\n        let subdiv_step2 = subdiv_step * subdiv_step;\r\n        let subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;\r\n\r\n        let pre1 = 3 * subdiv_step;\r\n        let pre2 = 3 * subdiv_step2;\r\n        let pre4 = 6 * subdiv_step2;\r\n        let pre5 = 6 * subdiv_step3;\r\n\r\n        let tmp1x = x1 - cx1 * 2 + cx2;\r\n        let tmp1y = y1 - cy1 * 2 + cy2;\r\n\r\n        let tmp2x = (cx1 - cx2) * 3 - x1 + x2;\r\n        let tmp2y = (cy1 - cy2) * 3 - y1 + y2;\r\n\r\n        let fx = x1;\r\n        let fy = y1;\r\n\r\n        let dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;\r\n        let dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;\r\n\r\n        let ddfx = tmp1x * pre4 + tmp2x * pre5;\r\n        let ddfy = tmp1y * pre4 + tmp2y * pre5;\r\n\r\n        let dddfx = tmp2x * pre5;\r\n        let dddfy = tmp2y * pre5;\r\n\r\n        while (segments-- > 0) {\r\n            this._vertex(fx, fy, color);\r\n            fx += dfx;\r\n            fy += dfy;\r\n            dfx += ddfx;\r\n            dfy += ddfy;\r\n            ddfx += dddfx;\r\n            ddfy += dddfy;\r\n            this._vertex(fx, fy, color);\r\n        }\r\n        this._vertex(fx, fy, color);\r\n        this._vertex(x2, y2, color);\r\n    }\r\n\r\n    public clear() {\r\n        this._vIdx = this._numberVertices = 0;\r\n        this._ctx.clear();\r\n    }\r\n\r\n    public flush() {\r\n        let vIdx = this._vIdx;\r\n        if (vIdx === 0)\r\n            return;\r\n\r\n        if (!this._mvp) {\r\n            if (__DEBUG__) {\r\n                console.log('no MVP matrix');\r\n            }\r\n            return;\r\n        }\r\n\r\n        let arr = this._vertices.subarray(0, vIdx);\r\n        this._bigBuffer.setData(arr, false);\r\n        this._bigBuffer.bindAttributes();\r\n\r\n        this._shader.uMat3(U_MVP_MATRIX, this._mvp);\r\n        this._shader.bind();\r\n        this._ctx.drawArraysLines(0, vIdx / 6);\r\n\r\n        this._vIdx = this._numberVertices = 0;\r\n\r\n    }\r\n\r\n    protected _createProgram(): Program {\r\n\r\n        let vs = `\r\n\t\t\t\tattribute vec2 ${A_POS};\r\n\t\t\t\tattribute vec4 ${A_COLOR};\r\n\t\t\t\tuniform mat3 ${U_MVP_MATRIX};\r\n\t\t\t\tvarying vec4 ${V_COLOR};\r\n\r\n\t\t\t\tvoid main () {\r\n                    vec3 coords = ${U_MVP_MATRIX} * vec3(${A_POS}, 1.0);\r\n                    gl_Position = vec4(coords.xy, 0.0, 1.0);\r\n\t\t\t\t\t${V_COLOR} = ${A_COLOR};\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\r\n        let fs = `\r\n                precision mediump float;\r\n                varying vec4 ${V_COLOR};\r\n\t\t\t\tvoid main () {\r\n                    gl_FragColor = ${V_COLOR};\r\n\t\t\t\t}\r\n            `;\r\n\r\n        return new Program(this._ctx, vs, fs);\r\n    }\r\n\r\n    protected _check(numVertices: number) {\r\n        if ((numVertices + this._numberVertices) > this._maxVertices)\r\n            this.flush();\r\n    }\r\n\r\n    protected _vertex(x: number, y: number, color: Color) {\r\n        let vertices = this._vertices;\r\n\r\n        vertices[this._vIdx++] = x;\r\n        vertices[this._vIdx++] = y;\r\n\r\n        vertices[this._vIdx++] = color.r;\r\n        vertices[this._vIdx++] = color.g;\r\n        vertices[this._vIdx++] = color.b;\r\n        vertices[this._vIdx++] = color.a;\r\n        // u v\r\n\r\n        this._numberVertices++;\r\n    }\r\n}","import { VertexBuffer, Color, Context, Program } from \"../\";\r\nimport Wireframe from \"./Wireframe\";\r\nimport { topleft2D, center2D, Matrix2D, Vector2D } from \"@shed/math\";\r\n\r\nlet canvas: HTMLCanvasElement = document.getElementById('c') as HTMLCanvasElement;\r\nlet gl = WebGLDebugUtils.makeDebugContext(canvas.getContext('webgl'));\r\n\r\nif (gl) {\r\n    let ctx = new Context(gl);\r\n    ctx.adjustSize();\r\n    let renderer = new Wireframe(ctx, 99999);\r\n    renderer.penColor = Color.YELLOW;\r\n\r\n\r\n    // let m = Matrix2D.SRT(1, 1, 0 * Math.PI / 180, 0, 0);\r\n    let proj = center2D(gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    // m.append(proj);\r\n\r\n    renderer.mvpMatrix = proj;\r\n\r\n    ctx.clear();\r\n    renderer.penColor = Color.RED;\r\n    renderer.drawLine(0, 0, 500, 0);\r\n    renderer.penColor = Color.random();\r\n    renderer.drawLine(0, 0, 500, 200);\r\n    renderer.penColor = Color.random();\r\n    renderer.drawLine(500, 0, 500, 200);\r\n    renderer.penColor = Color.random();\r\n    renderer.drawLine(0, 0, 0, 200);\r\n    renderer.penColor = Color.random();\r\n    // renderer.drawLine(0, 200, 500, 200);\r\n\r\n    renderer.penColor = Color.random();\r\n    renderer.drawLine(500, 0, 0, 200);\r\n    renderer.drawTriangle(0, -100, -100, 100, 100, 100);\r\n    renderer.drawRect(10,10,300,400,Color.GREEN);\r\n\r\n    renderer.penColor = Color.RED;\r\n    renderer.drawRectline(0, 0, -200, -200, 300);\r\n\r\n    renderer.drawX(-300, -300, 50);\r\n    renderer.drawCircle(0, 0, 300, 10);\r\n    renderer.drawCurve(-300, 0,\r\n        -100, -300,\r\n        100, -600,\r\n        300, 0\r\n        , 50)\r\n\r\n    renderer.flush();\r\n} else {\r\n    console.log('no webgl support');\r\n}\r\n\r\n"],"names":["Color","Mix","c1","c2","ratio","oneMinusR","r","g","b","a","fromHex","v","inv255","random","Math","constructor","reset","reset255","a255","r255","g255","b255","round","isNaN","hex","toFloat32Array","target","Float32Array","equal","c","e","abs","clone","toString","Context","ctx","_gl","clearColor","GRAY","width","drawingBufferWidth","height","drawingBufferHeight","cullBackFace","gl","enable","CULL_FACE","cullFace","BACK","clear","color","COLOR_BUFFER_BIT","_drawCall","colorMask","flipY","boole","pixelStorei","UNPACK_FLIP_Y_WEBGL","draw","drawArrays","primitiveType","offset","count","drawArraysPoints","POINTS","drawArraysLines","LINES","drawArraysLineStrip","LINE_STRIP","drawArraysLineLoop","LINE_LOOP","drawArraysTriangles","TRIANGLES","drawArraysTriangleStrip","TRIANGLE_STRIP","drawArraysTriangleFan","TRIANGLE_FAN","drawElementsTriangle","drawElements","UNSIGNED_SHORT","viewport","x","y","adjustSize","canvas","displayWidth","clientWidth","displayHeight","clientHeight","adjustHDSize","realToCSSPixels","window","devicePixelRatio","floor","registMouseDown","fun","onmousedown","ev","clientX","clientY","rect","getBoundingClientRect","left","top","Program","vsSource","fsSource","_ctx","_vsSource","_fsSource","_glProgram","_createGLProgram","numUniforms","getProgramParameter","ACTIVE_UNIFORMS","uniformInfo","i","getActiveUniform","name","substr","length","_uniformLocationMap","getUniformLocation","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","_attributeLocationMap","getAttribLocation","getAttributeLocation","attribute","uniform","uniformi","value","bind","uniform1i","uniform1f","uniform1fv","uVec2","value2","uniform2f","uVec3","value3","uniform3f","uVec4","value4","uniform4f","uMat2","array4","uniformMatrix2fv","uMat3","array9","uniformMatrix3fv","uMat4","array16","uniformMatrix4fv","uSampler2D","n","BINDING","useProgram","unbind","vsShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fsShader","FRAGMENT_SHADER","pm","createProgram","attachShader","linkProgram","deleteShader","dispose","deleteProgram","VertexBuffer","_glBuffer","createBuffer","setData","data","dynamic","_glUsage","DYNAMIC_DRAW","STATIC_DRAW","bufferData","ARRAY_BUFFER","addAttribute","location","numElements","item","Attribute","byteOffset","_stride","_attributes","push","bindAttributes","enableVertexAttribArray","vertexAttribPointer","FLOAT","bindBuffer","deleteBuffer","IndexBuffer","ELEMENT_ARRAY_BUFFER","Texture","image","useMipMaps","_glTexture","createTexture","_useMipMaps","_boundUnit","texImage2D","TEXTURE_2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","isPowerOf2","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","generateMipmap","NEAREST","unit","activeTexture","TEXTURE0","bindTexture","setWraps","uWrap","vWrap","setFilters","minFilter","magFilter","_defineProperty","A_POS","A_COLOR","U_MVP_MATRIX","V_COLOR","Wireframe","maxVertices","_maxVertices","_shader","_createProgram","_bigBuffer","_vertices","_color","penColor","backgroundColor","mvpMatrix","m","_mvp","float32Array","drawLine","x2","y2","_check","_vertex","drawArrow","angle","PI","Vector2D","rotate","drawRectline","leftHandNormal","normalize","scale","p1","add","p2","sub","p3","p4","drawTriangle","x3","y3","color2","color3","drawQuad","x4","y4","color4","drawRect","d","drawX","size","l","t","drawCircle","radius","segments","drawEllipse","twopi","xx","yy","cos","sin","drawRoundedRect","drawPolygon","path","drawStar","drawCurve","x1","y1","cx1","cy1","cx2","cy2","subdiv_step","subdiv_step2","subdiv_step3","pre1","pre2","pre4","pre5","tmp1x","tmp1y","tmp2x","tmp2y","fx","fy","dfx","dfy","ddfx","ddfy","dddfx","dddfy","_vIdx","_numberVertices","flush","vIdx","arr","subarray","vs","fs","numVertices","vertices","document","getElementById","WebGLDebugUtils","makeDebugContext","getContext","renderer","YELLOW","proj","center2D","RED","GREEN","console","log"],"mappings":"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"}